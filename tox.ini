# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
isolated_build = true
envlist =
    # always keep coverage-clean first
    # coverage-clean
    # code linters/stylers
    lint
    manifest
    pyroma
    flake8
    mypy
    # documentation linters/checkers
    doc8
    docstr-coverage
    docs
    # the actual tests
    py
    # always keep coverage-report last
    # coverage-report

[testenv]
# Runs on the "tests" directory by default, or passes the positional
# arguments from `tox -e py <posargs_1> ... <posargs_n>
commands = coverage run -p -m pytest --durations=20 {posargs:tests}
extras =
    # See the [options.extras_require] entry in setup.cfg for "tests"
    tests

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:lint]
deps =
    black
skip_install = true
commands = black src/biolookup/ tests/ setup.py
description = Run black.

[testenv:manifest]
deps = check-manifest
skip_install = true
commands = check-manifest
description = Check that the MANIFEST.in is written properly and give feedback on how to fix it.

[testenv:flake8]
skip_install = true
deps =
    flake8
    flake8-black
    flake8-bandit
    flake8-colors
    flake8-docstrings
    flake8-isort
    flake8-bugbear
    pep8-naming
    pydocstyle
    darglint
commands =
    flake8 src/biolookup/ tests/
description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming). See https://cthoyt.com/2020/04/25/how-to-code-with-me-flake8.html for more information.

[testenv:format]
skip_install = true
deps =
    black
    isort
commands =
    black .
    isort .
description = Run the code formatters on all code

[testenv:pyroma]
deps =
    pygments
    pyroma
skip_install = true
commands = pyroma --min=10 .
description = Run the pyroma tool to check the package friendliness of the project.

[testenv:mypy]
deps = mypy
skip_install = true
commands = mypy --install-types --non-interactive --ignore-missing-imports src/biolookup/
description = Run the mypy tool to check static typing on the project.

[testenv:doc8]
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/
description = Run the doc8 tool to check the style of the RST files in the project docs.

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage src/biolookup/ tests/ setup.py --skip-private --skip-magic
description = Run the docstr-coverage tool to check documentation coverage

[testenv:docs]
extras =
    docs
commands =
    python -m sphinx -W -b {posargs:html} -d docs/build/doctrees docs/source docs/build/{posargs:html}

[testenv:docs-test]
changedir = docs
extras =
    docs
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    sphinx-build -W -b html -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report

####################
# Deployment tools #
####################

[testenv:bumpversion]
commands = bump2version {posargs}
skip_install = true
passenv = HOME
deps =
    bump2version

[testenv:bumpversion-release]
commands = bump2version release --tag
skip_install = true
passenv = HOME
deps =
    bump2version

[testenv:build]
skip_install = true
deps =
    wheel
    build
commands =
    python -m build --sdist --wheel --no-isolation

[testenv:release]
skip_install = true
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
commands =
    {[testenv:build]commands}
    twine upload --non-interactive --skip-existing dist/*

[testenv:finish]
skip_install = true
passenv =
    HOME
    TWINE_USERNAME
    TWINE_PASSWORD
deps =
    {[testenv:release]deps}
    bump2version
commands =
    bump2version release --tag
    {[testenv:release]commands}
    git push --tags
    bump2version patch
    git push
whitelist_externals =
    /usr/bin/git
